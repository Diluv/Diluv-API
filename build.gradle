plugins {
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '1.8.0'
    //    id "checkstyle"
}

version = "${project_version}" + getBuildNumber() + (isSnapshot() ? "-snapshot" : '')

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation group: 'io.undertow', name: 'undertow-core', version: '2.0.29.Final'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.0'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'

    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.4'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.64'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-paranamer', version: '2.10.2'

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '6.1.4'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.5.3'

    implementation group: 'com.warrenstrange', name: 'googleauth', version: '1.4.0'
    implementation group: 'com.github.slugify', name: 'slugify', version: '2.4'
    implementation group: 'com.wildbit.java', name: 'postmark', version: '1.2.4'

    implementation group: 'com.github.spotbugs', name: 'spotbugs', version: '4.0.0-beta5'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.0'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'
    testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: '4.2.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
            'Timestamp': System.currentTimeMillis(),
            'Specification-Title': project.archivesBaseName,
            'Specification-Vendor': project.vendor,
            'Specification-Version': project.version,
            'Implementation-Title': project.archivesBaseName,
            'Implementation-Version': project.version,
            'Implementation-Vendor' : project.vendor,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            'Main-Class': 'com.diluv.api.DiluvAPI'
        ])
    }
}

jib {
    to {
        image = "diluv/diluv-api:" + version
        tags = ['latest' + (isSnapshot() ? "-snapshot" : '')]
        auth {
            username = System.getenv("DOCKER_USERNAME")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

//checkstyle {
//    configFile = file("checkstyle.xml")
//    toolVersion = '8.10'
//}

static String getBuildNumber() {
    return System.getenv("BUILD_NUMBER") ?: "0"
}

static boolean isSnapshot() {
    String ref = System.getenv("GITHUB_REF");
    if (ref != null && ref.startsWith("refs/tags/v")) {
        return false
    }
    return true
}