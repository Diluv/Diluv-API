plugins {
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '2.0.0'
    //    id "checkstyle"
}

version = "${project_version}" + (isSnapshot() ? '.' + getBuildNumber() : '')

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation group: 'io.undertow', name: 'undertow-core', version: '2.0.29.Final'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.0'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'

    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.6'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.64'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    implementation group: 'com.diluv.confluencia', name: 'Confluencia', version: '0.7.2'

    implementation group: 'com.warrenstrange', name: 'googleauth', version: '1.4.0'
    implementation group: 'com.github.slugify', name: 'slugify', version: '2.4'
    implementation group: 'com.wildbit.java', name: 'postmark', version: '1.2.5'

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.0'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'
    testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: '4.2.0'
	
    compile group: 'org.jboss.resteasy', name: 'resteasy-undertow', version: '4.5.0.Final'
    compile group: 'org.jboss.weld.servlet', name: 'weld-servlet', version: '2.4.8.Final'
    compile group: 'org.jboss.resteasy', name: 'resteasy-cdi', version: '4.5.0.Final'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
            'Timestamp'               : System.currentTimeMillis(),
            'Specification-Title'     : project.archivesBaseName,
            'Specification-Vendor'    : project.vendor,
            'Specification-Version'   : project.version,
            'Implementation-Title'    : project.archivesBaseName,
            'Implementation-Version'  : project.version,
            'Implementation-Vendor'   : project.vendor,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            'Main-Class'              : 'com.diluv.api.DiluvAPI'
        ])
    }
}

jib {
    to {
        image = "diluv/diluv-api:" + version
        tags = ['latest' + (isSnapshot() ? "-snapshot" : '')]
        auth {
            username = System.getenv("DOCKER_USERNAME")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

//checkstyle {
//    configFile = file("checkstyle.xml")
//    toolVersion = '8.10'
//}

static String getBuildNumber() {
    return System.getenv("BUILD_NUMBER") ?: "0"
}

static boolean isSnapshot() {
    String ref = System.getenv("GITHUB_REF");
    if (ref != null && ref.startsWith("refs/tags/v")) {
        return false
    }
    return true
}

task depsize  {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
            .each {
                out << "${it.name}".padRight(45)
                out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
            }
        println(out)
    }
}