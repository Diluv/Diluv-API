schema {
    query: Query
    mutation: Mutation
}

type Query {
    games(page: Int = 1, limit: Int = 20, sort: String = "new"): [Game!]!
    game(gameSlug: String!): Game
    projectType(gameSlug: String!, projectTypeSlug: String!): ProjectType
    projectReviews(page: Long = 1, limit: Int = 20): [Project!]!
    projects(gameSlug: String!, projectTypeSlug: String!, page: Long, limit: Int, sort: String): [Project!]!
    project(gameSlug: String!, projectTypeSlug: String!, projectSlug: String!): Project
    projectById(id: Long!): Project
    projectFile(id: Long!): ProjectFile
}

type Mutation {
    addProjectType(gameSlug: String!, projectTypeSlug: String!, projectTypeName: String!, isDefault: Boolean!, maxFileSize: Long): ProjectType!
    updateProjectType(gameSlug: String!, projectTypeSlug: String!, projectTypeName: String, isDefault: Boolean, maxFileSize: Long): ProjectType!
    reviewed (projectId: ID!, requestChange: Boolean!, reason: String): Project!
    addTag(gameSlug: String!, projectTypeSlug: String!, tagSlug: String!, tagName: String!): ProjectType
    addLoader(gameSlug: String!, projectTypeSlug: String!, loaderSlug: String!, loaderName: String!): ProjectType
}

type Author {
    role: String!
    user: User!
}

type Game {
    slug: ID!
    name: String!
    defaultProjectType: String!
    projectTypes: [ProjectType!]!
    gameVersions: [GameVersion!]!
    createdAt: String!
    url: String!
    logo: Image!
}

type SlugName{
    slug: String!
    name: String!
}
type Project {
    id: ID!
    slug: String!
    name: String!
    summary: String!
    description: String!
    downloads: Long!
    review: Boolean!
    released: Boolean!
    updatedAt: Long!
    createdAt: Long!
    authors: [Author!]!
    projectType: ProjectType!
    game: Game!
    tags: [SlugName!]!
    logo: String!
    files: [ProjectFile!]!
}

type ProjectType {
    slug: String!
    name: String!
    maxFileSize: Long!
    tags: [SlugName!]!
    game: Game!
    loaders: [ProjectTypeLoader!]!
}

type GameVersion {
    id: Long!
    version: String!
    type: String!
    releasedAt: String!
}

type ProjectTypeLoader {
    id: ID!
    slug: String!
    name: String!
    projectType: ProjectType!
}

type User {
    id: ID!
    createdAt: Long!
    displayName: String!
    username: String!
}

type ProjectFile {
    id: ID!
    name: String!
    size: Long!
    changelog: String!
    downloads: Long!
    releaseType: String!
    classifier:String!
    createdAt: Long!
#    downloadURL: String!
    gameVersions: [GameVersion!]!
}


type ImageSource {
    src: String!
    type: String!
}

type Image {
    fallback: ImageSource!
    sources: [ImageSource!]!
}

scalar Long